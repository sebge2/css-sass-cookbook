@use "sass:math";
@import 'shared.scss';

$default-border: 1px solid map-get($colors, 'main-color');
$backgrounds: (main-color: map-get($colors, 'main-color'), secondary-color: map-get($colors, 'secondary-color'));
$desktop-size: 40rem;

.my-parent {
    background: lighten(map-get($backgrounds, secondary-color), 5%); /* usage of lighten function */
    padding: 10px;
    margin: 20px auto;
    color: white;
}

.my-child {
    @extend .my-parent; /* extension */
    border: 1px dashed gray;
}

.simple-variable {
    border: $default-border;
}

.map-variable {
    p {
        color: white;
    }

    p:nth-child(1n) {
        background: map-get($backgrounds, main-color); /* map variable usage */
    }

    p:nth-child(2n) {
        background: map-get($backgrounds, secondary-color); /* map variable usage */
    }
}

@mixin display-grid($size) { /* mixin */
    display: grid;
    grid-template-columns: repeat($size, 1fr);
}

.my-mixin-grid {
    @include display-grid(2); /* mixin usage */
}


@mixin desktop-size-media {
    @media (min-width: $desktop-size) {
        @content
    }
}

.my-mixin-content-grid {
    @include desktop-size-media { /* mixin usage */
        background-color: map-get($backgrounds, secondary-color);
        color: white;
    }
}

.my-ampersand {
    padding: 10px;
    background: map-get($backgrounds, secondary-color);
    color: white;

    &:hover {  /* operator */
        background: lighten(map-get($backgrounds, secondary-color), 10%);
    }
}

.my-for-loop {
    $base-color: map-get($colors, secondary-color);

    @for $i from 1 through 3 { /* loop */
      ul :nth-child(3n + #{$i}) {
        background-color: lighten($base-color, $i * 15%);
      }
    }
}

.my-if-else {
    @mixin avatar($size, $circle: false) {
      width: $size;
      height: $size;
      border: 1px solid black;

      @if $circle { /* if */
        border-radius: math.div($size, 2);
      }
    }

    .square {
      @include avatar(100px, $circle: false);
    }

    .circle {
      @include avatar(100px, $circle: true);
    }

}