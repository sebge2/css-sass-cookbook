@use "sass:math";

h1 {
  margin-top: 50px;
}

$default-border: 1px solid black;
$colors: (main-color: red, secondary-color: orange);
$desktop-size: 40rem;

.my-parent {
    background: lighten(orange, 20%);
    padding: 10px;
    margin: 20px auto;
}

.my-child {
    @extend .my-parent;
    border: 1px dashed gray;
}

.simple-variable {
    border: $default-border;
}

.map-variable {
    span {
        color: map-get($colors, main-color);
    }

    p {
        color: map-get($colors, secondary-color);
    }
}

@mixin display-grid($size) {
    display: grid;
    grid-template-columns: repeat($size, 1fr);
}

.my-mixin-grid {
    @include display-grid(2);
}


@mixin desktop-size-media {
    @media (min-width: $desktop-size) {
        @content
    }
}

.my-mixin-content-grid {
    @include desktop-size-media {
        background-color: red;
    }
}

.my-ampersand {
    padding: 10px;
    background: red;

    &:hover {
        background: lighten(red, 10%);
    }
}

.my-for-loop {
    $base-color: #036;

    @for $i from 1 through 3 {
      ul :nth-child(3n + #{$i}) {
        background-color: lighten($base-color, $i * 15%);
      }
    }
}

.my-if-else {
    @mixin avatar($size, $circle: false) {
      width: $size;
      height: $size;
      border: 1px solid black;

      @if $circle {
        border-radius: math.div($size, 2);
      }
    }

    .square {
      @include avatar(100px, $circle: false);
    }

    .circle {
      @include avatar(100px, $circle: true);
    }

}